---
#
# mandatory
#

# fully qualified domain name (FQDN) for the cert
_crt_cert_fqdn: '{{ crt_cert_fqdn | mandatory }}'

# passphrase for the certificate authority (CA) private key
_crt_ca_priv_key_pass: '{{ crt_ca_priv_key_pass | mandatory }}'

# public key infrastructure (PKI) host - this is where the key generation will happen
_crt_pki_host: '{{ crt_pki_host | mandatory }}'

# remote user to connect to the PKI host with
_crt_pki_host_remote_user: '{{ crt_pki_host_remote_user | mandatory }}'

#
# optional (no default)
#

# CRL certificates to fetch
_crt_ca_crl_certs: '{{ crt_ca_crl_certs | default([]) }}'

#
# optional (with default)
#

#
# Certificate suffixes
#

# private key suffix
_crt_priv_key_suffix: '{{ crt_priv_key_suffix | default(_def_crt_priv_key_suffix) }}'

# certificate signing request (CSR) suffix
_crt_csr_suffix: '{{ crt_csr_suffix | default(_def_crt_csr_suffix) }}'

# certificate (aka public key) suffix
_crt_cert_suffix: '{{ crt_cert_suffix | default(_def_crt_cert_suffix) }}'

# certificate revocation list (CRL) suffix
_crt_crl_suffix: '{{ crt_crl_suffix | default(_def_crt_crl_suffix) }}'


#
# Certificate Authority (CA)
#

# root directory of the CA on the PKI host
_crt_ca_root_dir: '{{ crt_ca_root_dir | default(_def_crt_ca_root_dir) }}'

# name of the CA certificate (aka public key)
_crt_ca_cert_name: '{{ crt_ca_cert_name | default(_def_crt_ca_cert_name) }}'

# name of the CA chain certificate (for intermediate CAs)
_crt_ca_chain_cert_name: '{{ crt_ca_chain_cert_name | default(_def_crt_ca_chain_cert_name) }}'

# name of the CA private key
_crt_ca_priv_key_name: '{{ crt_ca_priv_key_name | default(_def_crt_ca_priv_key_name) }}'

# path of the CA's private keys directory
_crt_ca_priv_key_dir_path: '{{ crt_ca_priv_key_dir_path | default(_def_crt_ca_priv_key_dir_path) }}'

# path of the CA's certificates directory
_crt_ca_cert_dir_path: '{{ crt_ca_cert_dir_path | default(_def_crt_ca_cert_dir_path) }}'

# path of the CA's CSR directory
_crt_ca_csr_dir_path: '{{ crt_ca_csr_dir_path | default(_def_crt_ca_csr_dir_path) }}'

# path of the CA certificate
_crt_ca_cert_path: '{{ crt_ca_cert_path | default(_def_crt_ca_cert_path) }}'

# path of the CA chain certificate (for intermediate CAs)
_crt_ca_chain_cert_path: '{{ crt_ca_chain_cert_path | default(_def_crt_ca_chain_cert_path) }}'

# path of the CA private key
_crt_ca_priv_key_path: '{{ crt_ca_priv_key_path | default(_def_crt_ca_priv_key_path) }}'

# whether to fetch the CA certificate
_crt_ca_fetch_ca_cert: '{{ crt_ca_fetch_ca_cert | default(_def_crt_ca_fetch_ca_cert) }}'

# whether fo fetch the CA chain certificate (for intermediate CAs)
_crt_ca_fetch_ca_chain_cert: '{{ crt_ca_fetch_ca_chain_cert | default(_def_crt_ca_fetch_ca_chain_cert) }}'

# how long the certificate is valid
_crt_ca_not_after: '{{ crt_ca_not_after | default(_def_crt_ca_not_after) }}'

# from when should the certificate be valid
_crt_ca_not_before: '{{ crt_ca_not_before | default(_def_crt_ca_not_before) }}'

# whether to force generation of the certificate even if it's already present
_crt_ca_force_generation: '{{ crt_ca_force_generation | default(_def_crt_ca_force_generation) }}'

#
# Certificate Signing Request (CSR)
#

# CSR email
_crt_csr_email: '{{ crt_csr_email | default(_def_crt_csr_email) }}'

# CSR organization name (O)
_crt_csr_org: '{{ crt_csr_org | default(_def_crt_csr_org) }}'

# CSR organization unit name (OU)
_crt_csr_org_unit: '{{ crt_csr_org_unit | default(_def_crt_csr_org_unit) }}'

# CSR country name (C)
_crt_csr_country: '{{ crt_csr_country | default(_def_crt_csr_country) }}'

# CSR state name (S)
_crt_csr_state: '{{ crt_csr_state | default(_def_crt_csr_state) }}'

# CSR locality name (L)
_crt_csr_loc: '{{ crt_csr_loc | default(_def_crt_csr_loc) }}'

# CSR common name (usually the FQDN)
_crt_csr_common_name: '{{ crt_csr_common_name | default(_crt_cert_fqdn) }}'

# CSR key usage
_crt_csr_key_usage: '{{ crt_csr_key_usage | default(_def_crt_csr_key_usage) }}'

# CSR extended key usage
_crt_csr_extended_key_usage: '{{ crt_csr_extended_key_usage | default(_def_crt_csr_extended_key_usage) }}'

# whether the subjectAltName (SAN) should be considered critical
_crt_csr_subject_alt_name_critical: >-
  {{
    crt_csr_subject_alt_name_critical | default(_def_crt_csr_subject_alt_name_critical)
  }}

# whether the common name should be used for the subjectAltName (SAN) if no specific SANs are provided
_crt_csr_use_common_name_for_san: >-
  {{
    crt_csr_use_common_name_for_san | default(_def_crt_csr_use_common_name_for_san)
  }}

# list of subjectAltNames (SANs) to use - list items need to be prefixed by their options (DNS:, IP:, etc.)
_crt_csr_subject_alt_names: '{{ crt_csr_subject_alt_names | default(None) }}'

#
# Certificate Revocation List (CRL)
#

# whether to fetch the CRL certificate/s
_crt_ca_fetch_ca_crl_cert: '{{ crt_ca_fetch_ca_crl_cert | default(_def_crt_ca_fetch_ca_crl_cert) }}'

# whether to combine the CRLs into one CRL file (in case of multiple CRLs to fetch)
_crt_combine_ca_crl_certs: '{{ crt_combine_ca_crl_certs | default(_def_crt_combine_ca_crl_certs) }}'

# destination name of the combined CRL files
_crt_crl_dest_name: '{{ crt_crl_dest_name | default(_def_crt_crl_dest_name) }}'

#
# Private Key
#

# private key type to generate
_crt_priv_key_type: '{{ crt_priv_key_type | default(_def_crt_priv_key_type) }}'

# private key length/size to generate
_crt_priv_key_size: '{{ crt_priv_key_size | default(_def_crt_priv_key_size) }}'

# whether to force private key regeneration (not idempotent!)
_crt_force_priv_key_generation: '{{ crt_force_priv_key_generation | default(_def_crt_force_priv_key_generation) }}'

#
# General
#

# path on the Ansible controller where to (temporarily) store fetched certificates
_crt_local_dest_path: '{{ crt_local_dest_path | default(_def_crt_local_dest_path) }}'

# Permissions of the files inside _def_crt_local_dest_path
_crt_local_dest_path_owner: '{{ crt_local_dest_path_owner | default(_def_crt_local_dest_path_owner) }}'
_crt_local_dest_path_group: '{{ crt_local_dest_path_group | default(_def_crt_local_dest_path_group) }}'
_crt_local_dest_path_mode: '{{ crt_local_dest_path_mode | default(_def_crt_local_dest_path_mode) }}'

# whether to quiet assert
_crt_quiet_assert: '{{ crt_quiet_assert | default(_def_crt_quiet_assert) }}'

# SSH port of the PKI host
_crt_pki_host_remote_port: '{{ crt_pki_host_remote_port | default(_def_crt_pki_host_remote_port) }}'

# whether to remove locally stored temporary certificates (will break idempotency, if enabled)
# this will remove only the files and the directory for one specific host
_crt_remove_temporary_local_certificates: >-
  {{
    crt_remove_temporary_local_certificates | default(_def_crt_remove_temporary_local_certificates)
  }}

# whether to remove crt_local_dest_path completely (will break idempotency, if enabled)
_crt_remove_local_dest_path: >-
  {{
    crt_remove_local_dest_path | default(_def_crt_remove_local_dest_path)
  }}

# whether to deploy the certificate to the managed node
_crt_deploy_certificates: '{{ crt_deploy_certificates | default(_def_crt_deploy_certificates) }}'

# whether to install prerequisite packages
# only disable when you are sure that these are present, otherwise the automation *will* break
# this helps to speed up the role a little
_crt_install_prerequisite_packages: >-
  {{
    crt_install_prerequisite_packages | default(_def_crt_install_prerequisite_packages)
  }}

#
# Managed node certificate paths
#

# private key
_crt_remote_private_key_path: '{{ crt_remote_private_key_path | default(_def_crt_remote_private_key_path) }}'
_crt_remote_private_key_owner: '{{ crt_remote_private_key_owner | default(_def_crt_remote_private_key_owner) }}'
_crt_remote_private_key_group: '{{ crt_remote_private_key_group | default(_def_crt_remote_private_key_group) }}'
_crt_remote_private_key_mode: '{{ crt_remote_private_key_mode | default(_def_crt_remote_private_key_mode) }}'

# private key directory
_crt_remote_private_key_dir_owner: >-
  {{
    crt_remote_private_key_dir_owner | default(_def_crt_remote_private_key_dir_owner)
  }}
_crt_remote_private_key_dir_group: >-
  {{
    crt_remote_private_key_dir_group | default(_def_crt_remote_private_key_dir_group)
  }}
_crt_remote_private_key_dir_mode: >-
  {{
    crt_remote_private_key_dir_mode | default(_def_crt_remote_private_key_dir_mode)
  }}

# public key
_crt_remote_public_key_path: '{{ crt_remote_public_key_path | default(_def_crt_remote_public_key_path) }}'
_crt_remote_public_key_owner: '{{ crt_remote_public_key_owner | default(_def_crt_remote_public_key_owner) }}'
_crt_remote_public_key_group: '{{ crt_remote_public_key_group | default(_def_crt_remote_public_key_group) }}'
_crt_remote_public_key_mode: '{{ crt_remote_public_key_mode | default(_def_crt_remote_public_key_mode) }}'

# public key directory
_crt_remote_public_key_dir_owner: >-
  {{
    crt_remote_public_key_dir_owner | default(_def_crt_remote_public_key_dir_owner)
  }}
_crt_remote_public_key_dir_group: >-
  {{
    crt_remote_public_key_dir_group | default(_def_crt_remote_public_key_dir_group)
  }}
_crt_remote_public_key_dir_mode: '{{ crt_remote_public_key_dir_mode | default(_def_crt_remote_public_key_dir_mode) }}'

# certificate authority public key
_crt_remote_ca_public_key_path: '{{ crt_remote_ca_public_key_path | default(_def_crt_remote_ca_public_key_path) }}'
_crt_remote_ca_public_key_owner: '{{ crt_remote_ca_public_key_owner | default(_def_crt_remote_ca_public_key_owner) }}'
_crt_remote_ca_public_key_group: '{{ crt_remote_ca_public_key_group | default(_def_crt_remote_ca_public_key_group) }}'
_crt_remote_ca_public_key_mode: '{{ crt_remote_ca_public_key_mode | default(_def_crt_remote_ca_public_key_mode) }}'

# certificate authority public key directory
_crt_remote_ca_public_key_dir_owner: >-
  {{
    crt_remote_ca_public_key_dir_owner | default(_def_crt_remote_ca_public_key_dir_owner)
  }}
_crt_remote_ca_public_key_dir_group: >-
  {{
    crt_remote_ca_public_key_dir_group | default(_def_crt_remote_ca_public_key_dir_group)
  }}
_crt_remote_ca_public_key_dir_mode: >-
  {{
    crt_remote_ca_public_key_dir_mode | default(_def_crt_remote_ca_public_key_dir_mode)
  }}

# certificate authority chain certificate
_crt_remote_ca_chain_cert_path: '{{ crt_remote_ca_chain_cert_path | default(_def_crt_remote_ca_chain_cert_path) }}'
_crt_remote_ca_chain_cert_owner: '{{ crt_remote_ca_chain_cert_owner | default(_def_crt_remote_ca_chain_cert_owner) }}'
_crt_remote_ca_chain_cert_group: '{{ crt_remote_ca_chain_cert_group | default(_def_crt_remote_ca_chain_cert_group) }}'
_crt_remote_ca_chain_cert_mode: '{{ crt_remote_ca_chain_cert_mode | default(_def_crt_remote_ca_chain_cert_mode) }}'

# certificate authority chain certificate directory
_crt_remote_ca_chain_cert_dir_owner: >-
  {{
    crt_remote_ca_chain_cert_dir_owner | default(_def_crt_remote_ca_chain_cert_dir_owner)
  }}
_crt_remote_ca_chain_cert_dir_group: >-
  {{
    crt_remote_ca_chain_cert_dir_group | default(_def_crt_remote_ca_chain_cert_dir_group)
  }}
_crt_remote_ca_chain_cert_dir_mode: >-
  {{
    crt_remote_ca_chain_cert_dir_mode | default(_def_crt_remote_ca_chain_cert_dir_mode)
  }}

# certificate authority CRL
_crt_remote_ca_crl_path: '{{ crt_remote_ca_crl_path | default(_def_crt_remote_ca_crl_path) }}'
_crt_remote_ca_crl_owner: '{{ crt_remote_ca_crl_owner | default(_def_crt_remote_ca_crl_owner) }}'
_crt_remote_ca_crl_group: '{{ crt_remote_ca_crl_group | default(_def_crt_remote_ca_crl_group) }}'
_crt_remote_ca_crl_mode: '{{ crt_remote_ca_crl_mode | default(_def_crt_remote_ca_crl_mode) }}'

# certificate authority CRL directory
_crt_remote_ca_crl_dir_owner: '{{ crt_remote_ca_crl_dir_owner | default(_def_crt_remote_ca_crl_dir_owner) }}'
_crt_remote_ca_crl_dir_group: '{{ crt_remote_ca_crl_dir_group | default(_def_crt_remote_ca_crl_dir_group) }}'
_crt_remote_ca_crl_dir_mode: '{{ crt_remote_ca_crl_dir_mode | default(_def_crt_remote_ca_crl_dir_mode) }}'
...
